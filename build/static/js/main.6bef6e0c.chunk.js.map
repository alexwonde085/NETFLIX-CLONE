{"version":3,"sources":["requests.js","axios.js","Row.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRatedMovies","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","style","padding","videoId","opts","height","width","playerVars","autoplay","Banner","str","n","setMovie","Math","floor","random","length","backgroundSize","backgroundImage","backgroundPosition","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bef6e0c.chunk.js","sourcesContent":["const API_KEY = \"62d7373bff53133b33e8cb366fe5ed7f\";\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en=US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRatedMovies: `/movie/top_rated?api_key=${API_KEY}&language=en=US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n\n}\n\nexport default requests;\n\n","import axios from \"axios\";\n\n// base url to make requests to the movie database\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;","import React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport \"./Row.css\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n    useEffect(() => {\n        async function fetchData(){\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    }, [fetchUrl]);\n\n    const opts = {\n        height: \"390\",\n        width: \"100%\",\n        playerVars: {\n            autoplay: 1,\n        },\n    };\n\n    const handleClick = (movie) => {\n        if(trailerUrl){\n            setTrailerUrl(\"\");\n        }else{\n            movieTrailer(movie?.title || movie?.name || movie.original_name)\n            .then((url) => {\n                const urlParams = new URLSearchParams(new URL(url).search);\n                setTrailerUrl(urlParams.get('v'));\n            })\n            .catch((error) => console.log(error));\n        }\n    };\n\n    return (\n        <div className=\"row\">\n            <h2>{title}</h2>\n\n            <div className=\"row__posters\">\n            {movies.map(movie => (\n                <img \n                key={movie.id}\n                onClick={() => handleClick(movie)}\n                className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                src={`${base_url}${\n                    isLargeRow ?  movie.poster_path : movie.backdrop_path\n                }`} \n                alt={movie.name} />\n            ))}\n            </div>\n            <div style={{padding: \"40px\"}}>\n                {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n            </div>\n        </div>\n    )\n}\n\nexport default Row;\n","import React, { useState, useEffect } from 'react'\nimport axios from './axios';\nimport requests from './requests';\nimport './Banner.css';\n\nfunction Banner() {\nconst [movie, setMovie] = useState([]);\n\nuseEffect(()=>{\n    async function fetchData(){\n        const request = await axios.get(requests.fetchNetflixOriginals);\n        setMovie(\n            request.data.results[\n                Math.floor(Math.random()*request.data.results.length)\n            ]\n        );\n        return request;\n    }\n    fetchData();\n}, []);\nfunction truncate(str, n){\n    return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\n}\n    return (\n       <header className=\"banner\"\n        style={{\n            backgroundSize: \"cover\",\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"`,\n            backgroundPosition: \"center center\",\n        }}\n       >\n           <div className=\"banner__contents\">\n            <h1 className=\"banner__title\">\n                {movie?.title || movie?.name || movie?.original_name}\n            </h1>\n            <div className=\"banner__buttons\">\n                <button className=\"banner_button\">Play</button>\n                <button className=\"banner_button\">My List</button>\n            </div>\n            <h1 className=\"banner_description\">\n                {truncate(movie?.overview, 150)}\n            </h1>\n           </div>\n           <div className=\"banner__fadeBtton\" />\n       </header>\n    )\n}\n\nexport default Banner\n","import React, { useState, useEffect } from 'react'\nimport \"./Nav.css\";\n\nfunction Nav() {\n    \n    const [show, handleShow] = useState(false);\n    useEffect(()=>{\n        window.addEventListener(\"scroll\", () => {\n            if(window.scrollY > 100){\n                handleShow(true);\n            }else handleShow(false);\n        });\n        return () => {\n            window.removeEventListener(\"scroll\");\n        };\n    }, []);\n\n    return (\n        <div className={`nav ${show && \"nav__black\" }`}>\n            <img \n                className=\"nav__logo\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/170px-Netflix_2015_logo.svg.png\"\n                alt=\"Netflix Logo\"\n            />\n            \n            <img \n                className=\"nav__avatar\"\n                src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\n                alt=\"Netflix Logo\"\n            />            \n        </div>\n    )\n}\n\nexport default Nav\n","import React from 'react';\nimport './App.css';\nimport requests from './requests';\nimport Row from './Row';\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row \n        title =\"NETFLIX ORIGINALS\" fetchUrl = {requests.fetchNetflixOriginals}\n        isLargeRow //It is true by default\n      />\n      <Row title =\"Trending Now\" fetchUrl = {requests.fetchTrending}/>\n      <Row title = \"Top Rated\" fetchUrl = {requests.fetchTopRatedMovies} />\n      <Row title = \"Action Movies\" fetchUrl = {requests.fetchActionMovies} />\n      <Row title = \"Comedy Movies\" fetchUrl = {requests.fetchComedyMovies} />\n      <Row title = \"Horror Movies\" fetchUrl = {requests.fetchHorrorMovies} />\n      <Row title = \"Romance Movies\" fetchUrl = {requests.fetchRomanceMovies} />\n      <Row title = \"Documentaries\" fetchUrl = {requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}